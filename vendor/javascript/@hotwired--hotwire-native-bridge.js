// @hotwired/hotwire-native-bridge@1.2.1 downloaded from https://ga.jspm.io/npm:@hotwired/hotwire-native-bridge@1.2.1/dist/hotwire-native-bridge.js

import{Controller as e}from"@hotwired/stimulus";var t=class{#e;#t;#n;#s;constructor(){this.#e=null;this.#t=0;this.#n=[];this.#s=new Map}start(){this.notifyApplicationAfterStart()}notifyApplicationAfterStart(){document.dispatchEvent(new Event("web-bridge:ready"))}supportsComponent(e){return!!this.#e&&this.#e.supportsComponent(e)}send({component:e,event:t,data:n,callback:s}){if(!this.#e){this.#i({component:e,event:t,data:n,callback:s});return null}if(!this.supportsComponent(e))return null;const i=this.generateMessageId();const a={id:i,component:e,event:t,data:n||{}};this.#e.receive(a);s&&this.#s.set(i,s);return i}receive(e){this.executeCallbackFor(e)}executeCallbackFor(e){const t=this.#s.get(e.id);t&&t(e)}removeCallbackFor(e){this.#s.has(e)&&this.#s.delete(e)}removePendingMessagesFor(e){this.#n=this.#n.filter((t=>t.component!=e))}generateMessageId(){const e=++this.#t;return e.toString()}setAdapter(e){this.#e=e;document.documentElement.dataset.bridgePlatform=this.#e.platform;this.adapterDidUpdateSupportedComponents();this.#a()}adapterDidUpdateSupportedComponents(){this.#e&&(document.documentElement.dataset.bridgeComponents=this.#e.supportedComponents.join(" "))}#i(e){this.#n.push(e)}#a(){this.#n.forEach((e=>this.send(e)));this.#n=[]}};var n=class{constructor(e){this.element=e}get title(){return(this.bridgeAttribute("title")||this.attribute("aria-label")||this.element.textContent||this.element.value).trim()}get enabled(){return!this.disabled}get disabled(){const e=this.bridgeAttribute("disabled");return e==="true"||e===this.platform}enableForComponent(e){e.enabled&&this.removeBridgeAttribute("disabled")}hasClass(e){return this.element.classList.contains(e)}attribute(e){return this.element.getAttribute(e)}bridgeAttribute(e){return this.attribute(`data-bridge-${e}`)}setBridgeAttribute(e,t){this.element.setAttribute(`data-bridge-${e}`,t)}removeBridgeAttribute(e){this.element.removeAttribute(`data-bridge-${e}`)}click(){this.platform=="android"&&this.element.removeAttribute("target");this.element.click()}get platform(){return document.documentElement.dataset.bridgePlatform}};var{userAgent:s}=window.navigator;function appSupportsBridgeComponent(e){const t=s.match(/bridge-components: \[(.*?)\]/);return!!t&&t[1].split(" ").includes(e)}var i=class extends e{static component="";static get shouldLoad(){return appSupportsBridgeComponent(this.component)}pendingMessageCallbacks=[];initialize(){this.pendingMessageCallbacks=[]}connect(){}disconnect(){this.removePendingCallbacks();this.removePendingMessages()}get component(){return this.constructor.component}get platformOptingOut(){const{bridgePlatform:e}=document.documentElement.dataset;return this.identifier==this.element.getAttribute(`data-controller-optout-${e}`)}get enabled(){return!this.platformOptingOut&&this.bridge.supportsComponent(this.component)}send(e,t={},n){t.metadata={url:window.location.href};const s={component:this.component,event:e,data:t,callback:n};const i=this.bridge.send(s);n&&this.pendingMessageCallbacks.push(i)}removePendingCallbacks(){this.pendingMessageCallbacks.forEach((e=>this.bridge.removeCallbackFor(e)))}removePendingMessages(){this.bridge.removePendingMessagesFor(this.component)}get bridgeElement(){return new n(this.element)}get bridge(){return window.HotwireNative.web}};if(!window.HotwireNative){const e=new t;window.HotwireNative={web:e};addLegacyClientSupport(e);e.start()}function addLegacyClientSupport(e){window.Strada||(window.Strada={web:e});window.webBridge||(window.webBridge=e)}export{i as BridgeComponent,n as BridgeElement};

